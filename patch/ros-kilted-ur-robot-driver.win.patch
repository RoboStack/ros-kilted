From 635fe06177bec0e8ebad4ba341689fbc09a60da2 Mon Sep 17 00:00:00 2001
From: Silvio Traversaro <silvio@traversaro.it>
Date: Sat, 21 Jun 2025 13:51:53 +0200
Subject: [PATCH] ur_robot_driver: Fix compilation on Windows

---
 ur_robot_driver/CMakeLists.txt             | 9 ++++++---
 ur_robot_driver/src/hardware_interface.cpp | 2 +-
 ur_robot_driver/src/robot_state_helper.cpp | 2 +-
 3 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/ur_robot_driver/CMakeLists.txt b/ur_robot_driver/CMakeLists.txt
index 1393b3b03..1a76a5cab 100644
--- a/ur_robot_driver/CMakeLists.txt
+++ b/ur_robot_driver/CMakeLists.txt
@@ -9,9 +9,12 @@ option(
   OFF
 )
 
-add_compile_options(-Wall)
-add_compile_options(-Wextra)
-add_compile_options(-Wno-unused-parameter)
+if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
+  add_compile_options(-Wall)
+  add_compile_options(-Wextra)
+  add_compile_options(-Wno-unused-parameter)
+endif()
+set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
 
 if(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)
   message("${PROJECT_NAME}: You did not request a specific build type: selecting 'RelWithDebInfo'.")
diff --git a/ur_robot_driver/src/hardware_interface.cpp b/ur_robot_driver/src/hardware_interface.cpp
index a31ed1f8d..3b4bfb609 100644
--- a/ur_robot_driver/src/hardware_interface.cpp
+++ b/ur_robot_driver/src/hardware_interface.cpp
@@ -181,7 +181,7 @@ std::vector<hardware_interface::StateInterface> URPositionHardwareInterface::exp
       const std::vector<std::string> fts_names = {
         "force.x", "force.y", "force.z", "torque.x", "torque.y", "torque.z"
       };
-      for (uint j = 0; j < 6; ++j) {
+      for (uint32_t j = 0; j < 6; ++j) {
         state_interfaces.emplace_back(
             hardware_interface::StateInterface(sensor.name, fts_names[j], &urcl_ft_sensor_measurements_[j]));
       }
diff --git a/ur_robot_driver/src/robot_state_helper.cpp b/ur_robot_driver/src/robot_state_helper.cpp
index c422ae951..0a57ae75d 100755
--- a/ur_robot_driver/src/robot_state_helper.cpp
+++ b/ur_robot_driver/src/robot_state_helper.cpp
@@ -366,7 +366,7 @@ void RobotStateHelper::setModeExecute(const std::shared_ptr<RobotStateHelper::Se
           result_->message = "Play program service not available on this robot.";
         } else {
           // The dashboard denies playing immediately after switching the mode to RUNNING
-          sleep(1);
+          std::this_thread::sleep_for(std::chrono::milliseconds(1000));
           result_->success = safeDashboardTrigger(this->play_program_srv_);
         }
       }
