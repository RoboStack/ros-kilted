diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4ae1a98ad..24317d4d6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -42,9 +42,17 @@ add_library(${library_name}_common SHARED
   src/node_lattice.cpp
   src/smoother.cpp
 )
+# Add GenerateExportHeader support for symbol visibility, as we are using
+# static members we need to explicitly export them on Windows, as
+# CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS does not work with static members.
+include(GenerateExportHeader)
+generate_export_header(${library_name}_common
+  EXPORT_FILE_NAME "${CMAKE_CURRENT_BINARY_DIR}/include/${PROJECT_NAME}/${library_name}_common_visibility_control.hpp"
+)
 target_include_directories(${library_name}_common
   PUBLIC
     "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>"
+    "$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/include>"
     "$<INSTALL_INTERFACE:include/${PROJECT_NAME}>"
     ${OMPL_INCLUDE_DIRS}
 )
@@ -167,6 +175,10 @@ install(TARGETS ${library_name}_common ${library_name} ${library_name}_2d ${libr
 install(DIRECTORY include/
   DESTINATION include/${PROJECT_NAME}
 )
+install(FILES
+  "${CMAKE_CURRENT_BINARY_DIR}/include/${PROJECT_NAME}/${library_name}_common_visibility_control.hpp"
+  DESTINATION include/${PROJECT_NAME}
+)
 
 install(DIRECTORY lattice_primitives/sample_primitives DESTINATION share/${PROJECT_NAME})
 
diff --git a/include/nav2_smac_planner/node_hybrid.hpp b/include/nav2_smac_planner/node_hybrid.hpp
index ee3a4bf23..2585a581b 100644
--- a/include/nav2_smac_planner/node_hybrid.hpp
+++ b/include/nav2_smac_planner/node_hybrid.hpp
@@ -26,6 +26,7 @@
 #include "nav2_smac_planner/types.hpp"
 #include "nav2_smac_planner/collision_checker.hpp"
 #include "nav2_smac_planner/costmap_downsampler.hpp"
+#include "nav2_smac_planner/nav2_smac_planner_common_visibility_control.hpp"
 #include "nav2_costmap_2d/costmap_2d_ros.hpp"
 #include "nav2_costmap_2d/inflation_layer.hpp"
 
@@ -473,16 +474,16 @@ public:
   Coordinates pose;
 
   // Constants required across all nodes but don't want to allocate more than once
-  static float travel_distance_cost;
-  static HybridMotionTable motion_table;
+  NAV2_SMAC_PLANNER_COMMON_EXPORT static float travel_distance_cost;
+  NAV2_SMAC_PLANNER_COMMON_EXPORT static HybridMotionTable motion_table;
   // Wavefront lookup and queue for continuing to expand as needed
-  static LookupTable obstacle_heuristic_lookup_table;
-  static ObstacleHeuristicQueue obstacle_heuristic_queue;
+  NAV2_SMAC_PLANNER_COMMON_EXPORT static LookupTable obstacle_heuristic_lookup_table;
+  NAV2_SMAC_PLANNER_COMMON_EXPORT static ObstacleHeuristicQueue obstacle_heuristic_queue;
 
-  static std::shared_ptr<nav2_costmap_2d::Costmap2DROS> costmap_ros;
+  NAV2_SMAC_PLANNER_COMMON_EXPORT static std::shared_ptr<nav2_costmap_2d::Costmap2DROS> costmap_ros;
   // Dubin / Reeds-Shepp lookup and size for dereferencing
-  static LookupTable dist_heuristic_lookup_table;
-  static float size_lookup;
+  NAV2_SMAC_PLANNER_COMMON_EXPORT static LookupTable dist_heuristic_lookup_table;
+  NAV2_SMAC_PLANNER_COMMON_EXPORT static float size_lookup;
 
 private:
   float _cell_cost;
diff --git a/include/nav2_smac_planner/node_lattice.hpp b/include/nav2_smac_planner/node_lattice.hpp
index 824b43544..899ae11e4 100644
--- a/include/nav2_smac_planner/node_lattice.hpp
+++ b/include/nav2_smac_planner/node_lattice.hpp
@@ -27,6 +27,7 @@
 #include "nav2_smac_planner/collision_checker.hpp"
 #include "nav2_smac_planner/node_hybrid.hpp"
 #include "nav2_smac_planner/utils.hpp"
+#include "nav2_smac_planner/nav2_smac_planner_common_visibility_control.hpp"
 
 namespace nav2_smac_planner
 {
@@ -415,10 +416,10 @@ public:
 
   NodeLattice * parent;
   Coordinates pose;
-  static LatticeMotionTable motion_table;
+  NAV2_SMAC_PLANNER_COMMON_EXPORT static LatticeMotionTable motion_table;
   // Dubin / Reeds-Shepp lookup and size for dereferencing
-  static LookupTable dist_heuristic_lookup_table;
-  static float size_lookup;
+  NAV2_SMAC_PLANNER_COMMON_EXPORT static LookupTable dist_heuristic_lookup_table;
+  NAV2_SMAC_PLANNER_COMMON_EXPORT static float size_lookup;
 
 private:
   float _cell_cost;
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4ae1a98ad..3a574800b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -20,6 +20,10 @@ find_package(tf2 REQUIRED)
 find_package(tf2_ros REQUIRED)
 find_package(visualization_msgs REQUIRED)
 
+find_package(ode REQUIRED)
+list(REMOVE_ITEM OMPL_LIBRARIES "ode_double")
+list(APPEND OMPL_LIBRARIES "ODE::ODE")
+
 nav2_package()
 
 if(MSVC)
diff --git a/include/nav2_smac_planner/a_star.hpp b/include/nav2_smac_planner/a_star.hpp
index 8b127960c..a5dbbc262 100644
--- a/include/nav2_smac_planner/a_star.hpp
+++ b/include/nav2_smac_planner/a_star.hpp
@@ -26,7 +26,6 @@
 #include "nav2_costmap_2d/costmap_2d.hpp"
 #include "nav2_core/planner_exceptions.hpp"
 
-#include "nav2_smac_planner/thirdparty/robin_hood.h"
 #include "nav2_smac_planner/analytic_expansion.hpp"
 #include "nav2_smac_planner/node_2d.hpp"
 #include "nav2_smac_planner/node_hybrid.hpp"
@@ -47,7 +46,7 @@ class AStarAlgorithm
 {
 public:
   typedef NodeT * NodePtr;
-  typedef robin_hood::unordered_node_map<uint64_t, NodeT> Graph;
+  typedef std::unordered_map<uint64_t, NodeT> Graph;
   typedef std::vector<NodePtr> NodeVector;
   typedef std::pair<float, NodeBasic<NodeT>> NodeElement;
   typedef typename NodeT::Coordinates Coordinates;
