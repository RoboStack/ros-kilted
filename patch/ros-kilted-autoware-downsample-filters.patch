diff --git a/src/voxel_grid_downsample_filter/faster_voxel_grid_downsample_filter.cpp b/src/voxel_grid_downsample_filter/faster_voxel_grid_downsample_filter.cpp
index 2e418c0..428b6bc 100644
--- a/src/voxel_grid_downsample_filter/faster_voxel_grid_downsample_filter.cpp
+++ b/src/voxel_grid_downsample_filter/faster_voxel_grid_downsample_filter.cpp
@@ -165,7 +165,7 @@ FasterVoxelGridDownsampleFilter::calc_centroids_each_voxel(
   for (size_t global_offset = 0; global_offset + input->point_step <= input->data.size();
        global_offset += input->point_step) {
     Eigen::Vector4f point = get_point_from_global_offset(input, global_offset);
-    if (std::isfinite(point[0]) && std::isfinite(point[1]), std::isfinite(point[2])) {
+    if (std::isfinite(point[0]) && std::isfinite(point[1]) && std::isfinite(point[2])) {
       // Calculate the voxel index to which the point belongs
       int ijk0 = static_cast<int>(std::floor(point[0] * inverse_voxel_size_[0]) - min_voxel[0]);
       int ijk1 = static_cast<int>(std::floor(point[1] * inverse_voxel_size_[1]) - min_voxel[1]);
diff --git a/src/voxel_grid_downsample_filter/voxel_grid_downsample_filter_node.cpp b/src/voxel_grid_downsample_filter/voxel_grid_downsample_filter_node.cpp
index 241239d..4b02608 100644
--- a/src/voxel_grid_downsample_filter/voxel_grid_downsample_filter_node.cpp
+++ b/src/voxel_grid_downsample_filter/voxel_grid_downsample_filter_node.cpp
@@ -21,7 +21,6 @@
 #include <pcl_ros/transforms.hpp>
 #include <tf2_eigen/tf2_eigen.hpp>
 
-#include <pcl/io/io.h>
 #include <pcl/kdtree/kdtree_flann.h>
 #include <pcl/search/kdtree.h>
 #include <pcl/segmentation/segment_differences.h>
